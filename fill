-- this is used to fill the ground with materials.
-- usefull for preventing mobs from spawning below you, and near your mob farms
-- slot 1 = fuel
-- slot 2 = plug (block to be placed at the top of the hole)
-- slot 3-16 = fill materials. I usually use cobble

function countMats()
	local count = 0
	for i=3,16 do
		count = count + turtle.getItemCount(i)
	end

	return count
end

function miniCompact()
	local i = 16
	while turtle.getItemCount(3) < 10 and i > 3 do
		if turtle.getItemCount(i) > 0 then
			t.select(i)
			turtle.transferTo(3)
		end
		i = i - 1
	end

	t.select(3)
end

function findMats()
	miniCompact()

	for i=3,16 do
		if turtle.getItemCount(i) > 0 then
			t.select(i)
			return true
		end
	end
	return false
end

function findAndPlace()
	if findMats() then
		while not t.place() and not t.detect() do
			t.attack()
			os.sleep(0.5)
		end
		return true
	end
	return false
end

function fillWalls()
	for i=1,3 do
		findAndPlace()
		t.turnRight()
	end
	findAndPlace()
end

function doFill()
	local h,x,y,z = t.getLoc()

	local depth = 0

	t.digDown()

	for i=1,2 do
		t.downDigAttack()
		depth = depth + 1
		t.digDown()
		fillWalls()
	end

	t.placeUp(3)

	while not t.detectDown() do
		t.downDigAttack()
		depth = depth + 1
		t.digDown()
		fillWalls()
	end

	for i=1,depth-1 do
		if findMats() then
			t.placeDown()
		end
		t.upDigAttack()
	end
	if findMats() then
		t.placeDown()
	end

	t.up()
	t.placeDown(2)
	t.setHeading(h)
	t.compactInventory()
end

local args = { ... }

turtle.select(1)
t.select(1)

local doNext
if #args >= 1 then
	local x = 1
	while x <= #args do
		local val = args[x]

		if val == "f" then
			if turtle.getItemCount(1) < 3 then
				print("Not enough coal for filling. canceling")
				break
			end

			if countMats() < 192 then
				print("Not fill mats, canceling")
				break
			end

			doFill()
		elseif val == "1f" then
			local count = tonumber(args[x + 1])

			if count == nil then
				count = 1
			else
				x = x + 1
			end

			for i=1,count do
				t.fdDigAttack(2)
				t.lt()
				t.fdDigAttack()
				t.rt()

				if turtle.getItemCount(1) < 3 then
					print("Not enough coal for filling. canceling")
					break
				end

				if countMats() < 192 then
					print("Not fill mats, canceling")
					break
				end

				doFill()
			end
		else
			val = tonumber(val)

			if val ~= nil then
				for i=1,val do
					t.fdDigAttack(2)
					t.lt()
					t.fdDigAttack()
					t.rt()
				end
			end
		end
		x = x + 1
	end
else
	print ("fill usage")
	print ("To fill a hole:")
	print ("  fill f")
	print ("To move to the next hole:")
	print ("  fill 1")
	print ("To move to the second hole and fill it:")
	print ("  fill 2 f")
	print ("Slots:")
	print ("slot-item(amount)")
	print (" 1-coal/charcoal(min of 3)")
	print (" 2-hole cap (min of 2)")
	print (" 3 and up-fill materials")
end