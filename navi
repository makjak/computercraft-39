local heading = -1

-- calculate the heading

function forwardTest()
	local x,y,z = gps.locate(5)

	if turtle.forward() == false then
		return -1
	end

	local x1,y1,z1 = gps.locate(5)

	print(x1)
	print(y1)
	print(z1)

	turtle.back()

	if x1 > x then
		return 3 -- positive x direction
	elseif x1 < x then
		return 1 -- negative x direction
	elseif z1 > z then
		return 0 -- positive z direction
	elseif z1 < z then
		return 2 -- negative z direction
	end
end

function findHeading()
	heading = forwardTest()
	if heading == -1 then
		turtle.turnRight()
		heading = forwardTest()
		if heading == -1 then
			turtle.turnRight()
			heading = forwardTest()
			if heading == -1 then
				turtle.turnRight()
				heading = forwardTest()
				turnLeft()
			end
			turnLeft()
		end
		turnLeft()
	end

	return heading
end

function back()
	return turtle.back()
end

function forward()
	return turtle.forward()
end

function up()
	return turtle.up()
end

function down()
	return turtle.down()
end

function right()
	turnRight()
	local flag = forward()
	turnLeft()
	return flag
end

function left()
	turnLeft()
	local flag = forward()
	turnRight()
	return flag
end

function turnRight()
	turtle.turnRight()
	heading = (heading + 1) % 4
end

function turnLeft()
	turtle.turnLeft()
	heading = ((heading -1) + 4) % 4
end

function setHeading(target)
	if heading == -1 then
		findHeading()
	end
	
	if target == heading then
		return
	end

	if heading - target == 1 or (target == 3 and heading == 0) then
		while heading ~= target do
			turnLeft()
		end
	else
		while heading ~= target do
			turnRight()
		end
	end
end

function moveToX(x)
	if heading == -1 then
		findHeading()
	end

	local xc, yc, zc = gps.locate(5)

	if xc > x then
		setHeading(1)
	elseif xc < x then
		setHeading(3)
	end

	while xc ~= x do
		if not forward() then
			if right() then
				right()
			elseif left() then
				left()
			end
		end
		xc, yc, zc = gps.locate(5)
	end
end

function moveToZ(z)
	if heading == -1 then
		findHeading()
	end

	local xc, yc, zc = gps.locate(5)

	if zc > z then
		setHeading(2)
	elseif zc < z then
		setHeading(0)
	end

	while zc ~= z do
		if not forward() then
			if right() then
				right()
			elseif left() then
				left()
			end
		end
		xc, yc, zc = gps.locate(5)
	end
end

function moveToY(y)
	local xc, yc, zc = gps.locate(5)

	while y > yc do
		if not up() then
			if right() then
				right()
			elseif left() then
				left()
			elseif forward() then
				forward()
			elseif back() then
				back()
			end
		end
		xc, yc, zc = gps.locate(5)
	end

	while y < yc do
		if not down() then
			if right() then
				right()
			elseif left() then
				left()
			elseif forward() then
				forward()
			elseif back() then
				back()
			end
		end
		xc, yc, zc = gps.locate(5)
	end
end


function dumbGoto(x,y,z)
	moveToY(85)

	local xc, yc, zc = gps.locate(5)
	while x ~= xc or y ~= yc or z ~= zc do

		if math.abs(xc-x) < math.abs(zc-z) then
			moveToX(x)
			moveToZ(z)
		else
			moveToZ(z)
			moveToX(x)
		end

		moveToY(y)

		xc, yc, zc = gps.locate(5)
	end
end


-- 3 x+
-- 1 x-
-- 0 z+
-- 2 z-

function smartGoto(x,y,z)

	local found = false
	while not found do
		local sx,sy,sz = gps.locate(5)

		if sx == x and sy == y and sz == z then
			return
		end

		local xgood = true
		local zgood = true
		local ygood = true
	
		while xgood do
			sx,sy,sz = gps.locate(5)
			-- nudge in x direction
			if sx < x then
				setHeading(3)
				xgood = forward()
			elseif sx > x then
				setHeading(1)
				xgood = forward()
			else
				break
			end

			if not xgood then
				print("not x")
				up()
				if right() then
					right()
				else
					left()
					left()
				end
			end

			if sy < y then
				ygood = up()
			elseif sy > y then
				ygood = down()
			end

		end
		
		while zgood do
			sx,sy,sz = gps.locate(5)
			if sz < z then
				setHeading(0)
				zgood = forward()
			elseif sz > z then
				setHeading(2)
				zgood = forward()
			else
				break
			end

			if not zgood then
				print("not z")
				up()
				if right() then
					right()
				else
					left()
					left()
				end
			end

			if sy < y then
				ygood = up()
			elseif sy > y then
				ygood = down()
			end

		end

						
	end

end


function goto(x,y,z)
	dumbGoto(x,y,z)
	-- smartGoto(x,y,z)
end

-- goto(101,74,188)