-- some simple helper tools for configuring and communicating with wireless modems

function configureModem(networkId)
	local modem = nil
	local modem_side = nil

	for n,sSide in ipairs( rs.getSides() ) do
		if peripheral.getType( sSide ) == "modem" and peripheral.call( sSide, "isWireless" ) then	
			modem_side = sSide
			modem = peripheral.wrap(sSide)
			print("Found modem on ", sSide, " side.")
			break
		end
	end

	if modem == nil then
		print("Could not find modem!")
		return
	end

	if not modem.isOpen(networkId) then
		print("Opening ",networkId," channel modem on side ",modem_side)
		modem.open(networkId)
	end

	return modem
end


function waitForPacket(modem, networkId)
	while true do
		local e, p1, p2, p3, p4, p5 = os.pullEvent()
		if e == "modem_message" then
			-- We received a message from a modem
			local sSide, sChannel, sReplyChannel, sMessage, nDistance = p1, p2, p3, p4, p5
			if sChannel == networkId then
				return sReplyChannel, sMessage
			end
		end
	end
end

function waitForPacketTimeout(modem, networkId, timeout)
	local timeoutTimer = os.startTimer( timeout )

	while true do
		local e, p1, p2, p3, p4, p5 = os.pullEvent()
		if e == "modem_message" then
			-- We received a message from a modem
			local sSide, sChannel, sReplyChannel, sMessage, nDistance = p1, p2, p3, p4, p5
			if sChannel == networkId then
				return sReplyChannel, sMessage
			end
		elseif e == "timer" then
			-- We received a timeout
			local timer = p1
			if timer == timeoutTimer then
				return nil
			end
		end
	end
end
