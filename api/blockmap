-- stores ttl data for blocks.
-- each time a block is checked, the TTL is decremented.
-- once it hits zero, it is removed
-- when a block is added, the TTL is incremented.

local map = nil

function init()
	map = blocktable.new()

	map.map = load()
end

function load()
	if not fs.exists("/blocks.map") then
		return {}
	end

	local f, err = fs.open("/blocks.map", "r")

	local data = f.readLine()

	f.close()

	return textutils.unserialize(data)
end

function save(map)
	local f,err = fs.open("/block.map", "w")
	f.write(textutils.serialize(map.map))
	f.flush()
	f.close()
end


function exists(x, y, z)
	local ttl = map:get(x, y, z)

	if ttl ~= nil then
		ttl = ttl - 1
		if ttl == 0 then
			map:remove(x, y, z)
		else
			map:set(x, y, z, ttl)
		end

		save(map)

		return true
	end

	return false
end


function add(x, y, z)
	local ttl = map:get(x, y, z) or 0

	ttl = ttl + 5

	map:set(x, y, z, ttl)

	save(map)
end


