local DELIVERY_NETWORK = 2000

-- startup stuff
local function printUsage()
	print( "Usages:" )
	print( "deliverybot itemname" )
end

local tArgs = { ... }
if #tArgs < 1 then
	printUsage()
	return
end

local itemName = tArgs[1]

print("Sharing ", itemName)

function listRequest(modem, sReplyChannel, nameRequest)
	-- count items
	local itemCount = 0
	for i=2,16,1 do
		itemCount = itemCount + turtle.getItemCount(i)
	end


	print("I have ", itemCount," items.")
	if itemCount == 0 then
		print("No items available, not replying")
	else
		print("Sending to ", sReplyChannel)

		local posX, posY, posZ = gps.locate(5)
		print("Location: (",posX,",",posY,",",posZ,")")

		modem.transmit( sReplyChannel, DELIVERY_NETWORK, 
			textutils.serialize({os.getComputerID(),itemName,itemCount,posX,posY,posZ}))
	end
end

function deliveryRequest(modem, sReplyChannel, requestCount, x, y, z)
	refuel.run(1000)
	turtle.select(1)
	while turtle.suck() do
		os.sleep(0.5)
	end
	
	local itemCount = 0
	for i=2,16,1 do
		itemCount = itemCount + turtle.getItemCount(i)
	end

	if requestCount > itemCount then
		requestCount = itemCount
	end

	-- store current position
	local oh = navi.findHeading()
	local xo,yo,zo = gps.locate(5)

	-- fly to target
	navi.goto(x,y,z)

	-- drop items
	for i=2,16,1 do
		if turtle.getItemCount(i) > 0 then
			turtle.select(i)

			if requestCount > turtle.getItemCount(i) then
				turtle.dropDown()
				requestCount = requestCount - turtle.getItemCount(i)
			else
				turtle.dropDown(requestCount)
				requestCount = 0
			end
		end

		if requestCount == 0 then
			break
		end
	end
			
	turtle.up()
	turtle.up()
	turtle.up()
	turtle.up()

	-- tell client that we are done
	modem.transmit( sReplyChannel, DELIVERY_NETWORK, 
		textutils.serialize({"complete", os.getComputerID()}))

	-- fly home
	navi.goto(xo,yo,zo)
	navi.setHeading(oh)

	refuel.run(1000)

	turtle.select(1)
	while turtle.suck() do
		os.sleep(0.5)
	end
end

function startServer()
	refuel.run(1000)

	turtle.select(1)
	while turtle.suck() do
		os.sleep(0.5)
	end

	local modem = nil
	local modem_side = nil

	modem, modem_side = modemhelp.configureModem(DELIVERY_NETWORK)

	print("Listening for requests")
	while true do
		local e, p1, p2, p3, p4, p5 = os.pullEvent()
		if e == "modem_message" then
			-- We received a message from a modem
			local sSide, sChannel, sReplyChannel, sMessage, nDistance = p1, p2, p3, p4, p5

			if sSide == modem_side and sChannel == DELIVERY_NETWORK then
				local tResult = textutils.unserialize( sMessage )

				if tResult[1] == "list" then
					listRequest(modem, sReplyChannel, tResult[2])
				elseif tResult[1] == "deliver" and tResult[2] == os.getComputerID() then
					deliveryRequest(modem, sReplyChannel, tResult[3], tResult[4], tResult[5], tResult[6])
				end
			end
		end
	end
end

startServer()