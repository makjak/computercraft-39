os.loadAPI("/rom/mcarver/modemhelp")

local DELIVERY_NETWORK = 2000

function listClients(itemName)
	local modem = nil
	local modem_side = nil
	local myId = DELIVERY_NETWORK + os.getComputerID()
	
	modem, modem_side = modemhelp.configureModem(myId)

	modem.transmit(DELIVERY_NETWORK,myId,
		textutils.serialize({"list",itemName}))

	local timeout = os.startTimer( 5 )
	local response = nil

	-- wait for list
	while true do
		local e, p1, p2, p3, p4, p5 = os.pullEvent()
		if e == "modem_message" then
			-- We received a message from a modem
			local sSide, sChannel, sReplyChannel, sMessage, nDistance = p1, p2, p3, p4, p5
			if sSide == modem_side and sChannel == myId then
				local tResult = textutils.unserialize( sMessage )

				if tResult[2] == itemName then
					response = tResult
					break
				end
			end
		elseif e == "timer" then
			-- We received a timeout
			local timer = p1
			if timer == timeout then
				break
			end
		end
	end

	modem.close(myId)

	if response == nil then
		print("Crap... didn't find anything")
		return nil
	end

	return response[1],response[2],response[3],response[4],response[5],response[6]
end

function requestDelivery(targetId)

	local x,y,z = gps.locate(5)

	local modem = nil
	local modem_side = nil
	local myId = DELIVERY_NETWORK + os.getComputerID()
	
	modem, modem_side = modemhelp.configureModem(myId)

	modem.transmit(DELIVERY_NETWORK,myId,
		textutils.serialize({"deliver",targetId,x,y+1,z}))


	timeout = os.startTimer( 60 )
	local gotmsg = false

	-- wait for complete message
	while true do
		local e, p1, p2, p3, p4, p5 = os.pullEvent()
		if e == "modem_message" then
			-- We received a message from a modem
			local sSide, sChannel, sReplyChannel, sMessage, nDistance = p1, p2, p3, p4, p5
			if sSide == modem_side and sChannel == myId then

				local tResult = textutils.unserialize( sMessage )

				if tResult[1] == "complete" and tResult[2] == targetId then
					gotmsg = true
					break
				end
			end
		elseif e == "timer" then
			-- We received a timeout
			local timer = p1
			if timer == timeout then
				break
			end
		end
	end

	modem.close(myId)

	return gotmsg
end


function orderItem(itemName)
	local computerId = dbc.listClients(itemName)

	if computerId ~= nil then
		return dbc.requestDelivery(computerId)
	end
	return false
end
